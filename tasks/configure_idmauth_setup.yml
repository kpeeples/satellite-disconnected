---
- name: CONFIGURE SATELLITE IDM | Create host keytab
  shell: |
         echo {{ idm_vars.idm_password }} | kinit admin
         rm -f /etc/krb5.keytab
         /usr/sbin/ipa-getkeytab -p host/{{ ansible_fqdn }}@{{ ansible_domain | upper }} -k /etc/krb5.keytab
  tags:
    - idmauth

- name: CONFIGURE SATELLITE IDM | Add HTTP Service to ipa for satellite
  shell: |
         /usr/bin/ipa service-add HTTP/{{ ansible_fqdn }} ||
         /usr/bin/ipa service-show  HTTP/{{ ansible_fqdn }}
  register: result
  changed_when: 
    - result.rc == 0  
  failed_when:
    - ( result.rc == 2 and "already exists" not in result.stderr ) or ( result.rc != 2 and result.rc != 0 )
  tags:
    - idmauth

- name: CONFIGURE SATELLITE IDM | Create hbacrule in IDM server for satellite
  shell: |
         /usr/bin/ipa hbacsvc-add satellite-prod
         /usr/bin/ipa hbacrule-add allow_satellite_prod
         /usr/bin/ipa hbacrule-add-service allow_satellite_prod --hbacsvcs=satellite-prod
         /usr/bin/ipa hbacrule-add-user allow_satellite_prod --groups=satellite-admin
         /usr/bin/ipa hbacrule-add-host allow_satellite_prod --hosts={{ ansible_fqdn }}
  register: result
  changed_when: 
    - result.rc == 0  
  failed_when:
    - ( result.rc == 1 and "already exists" not in result.stderr ) or ( result.rc != 1 and result.rc != 0 )
  tags:
    - idmauth

- name: CONFIGURE SATELLITE IDM | Add satellite admin group to idm
  command: /usr/bin/ipa group-find sat-admins
  register: sat_admins_idm
  changed_when: False
  failed_when:
    - sat_admins_idm.rc != 0
  tags:
    - idmauth

- command: /usr/bin/ipa group-add sat-admins
  when: sat_admins_idm is failed
  tags:
    - idmauth

- name: CONFIGURE SATELLITE IDM | Add satellite users group to idm
  command: /usr/bin/ipa group-find sat-users
  register: sat_users_idm
  changed_when: False
  failed_when:
    - sat_users_idm.rc != 0
  tags:
    - idmauth
- command: /usr/bin/ipa group-add sat-users
  when: sat_users_idm is failed
  tags:
    - idmauth

- name: Check for ldap auth source in Satellite if not there create it
  shell: hammer --csv auth-source ldap list --search  | grep -v "Id"| cut -d, -f1
  register: ldap_auth_present
  changed_when: False
  tags:
    - idmauth

- name: CONFIGURE SATELLITE IDM | Configure satellite to use external IDM for auth
  command: >
           /usr/bin/hammer auth-source ldap create --name {{ idm_auth_vars.ldap_server }} \
           --account "{{ idm_auth_vars.ldap_user }}" \
           --account-password "{{ idm_auth_vars.ldap_password }}" \
           --attr-firstname givenName \
           --attr-lastname sn \
           --attr-login uid \
           --attr-mail mail \
           --base-dn {{ idm_auth_vars.ldap_base_dn }} \
           --groups-base {{ idm_auth_vars.ldap_groups_base_dn }} \
           --host {{ idm_auth_vars.ldap_server }} \
           --port 389 \
           --server-type posix \
           --locations {{ sat_loc }} \
           --organizations {{ sat_org }} \
           --onthefly-register yes
  when: ldap_auth_present.stdout == ""
  tags:
    - idmauth

- name: Register ldap_auth id number
  shell: /usr/bin/hammer --csv auth-source ldap --search | grep -v "Id" | cut -d, -f1
  register: auth_id_src
  tags:
    - idmauth

- name: Check for satellite user group sat-users if not there create it.
  shell: hammer --csv user-group list --search sat-users
  register: sat_users_hammer
  changed_when: False
  tags:
    - idmauth

- command: /usr/bin/hammer user-group create --name sat-users
  when: "'sat-users' not in sat_users_hammer.stdout"
  tags:
    - idmauth

- command: /usr/bin/hammer user-group update --name sat-users --roles Viewer
  when: "'sat-users' not in sat_users_hammer.stdout"
  tags:
    - idmauth

- name: Check for satellite user group sat-admins if not there create it.
  shell: hammer --csv user-group list --search sat-admins
  register: sat_admins_hammer
  changed_when: False
  tags:
    - idmauth

- command: /usr/bin/hammer user-group create --name sat-admins
  when: "'sat-admins' not in sat_admins_hammer.stdout"
  tags:
    - idmauth

- command: /usr/bin/hammer user-group update --name sat-admins --admin yes
  when: "'sat-admins' not in sat_admins_hammer.stdout"
  tags:
    - idmauth

- name: Check if external group link for sat-users exists
  command: hammer --csv user-group external list --user-group sat-users
  register: external_group_users
  failed_when:
    - external_group_users.rc != 0
  changed_when: False
  tags:
    - idmauth
- shell: /usr/bin/hammer user-group external create --name sat-users --user-group sat-users --auth-source-id {{ auth_id_src.stdout }}
  when: external_group_users.rc == 70
  tags:
    - idmauth

- name: Check if external group link for sat-admins exists
  command: hammer --csv user-group external list --user-group sat-admins
  register: external_group_admins
  failed_when:
    - external_group_users.rc != 0
  changed_when: False
  tags:
    - idmauth

- shell: /usr/bin/hammer user-group external create --name sat-admins --user-group sat-admins --auth-source-id {{ auth_id_src.stdout }}
  when: external_group_admins.rc == 70
  tags:
    - idmauth
