---
- name: Ensure ipa-client is on latest
  yum:
    name: ipa-client
    state: latest
  when: idm_dns_setup and dns_proxy
  tags:
    - idmdns

- name: Configure IdM client
  shell: /usr/sbin/ipa-client-install -U \
          --hostname "{{ ansible_fqdn }}" \
          --server "{{ idm_vars.idm_server }}" \
          --realm "{{ idm_vars.idm_realm }}" \
          --domain "{{ idm_vars.idm_domain }}" \
          --principal "{{ idm_vars.idm_principal }}" \
          --password "{{ idm_vars.idm_password }}"
  register: result
  failed_when: 
    - ( result.rc != 3 and result.rc != 0 )
  tags:
    - idmdns
 
- name: Configure DNS proxy
  shell: echo "{{ idm_vars.idm_password }}" | kinit admin;
         /usr/bin/ipa service-add capsule/{{ ansible_fqdn }};
         /usr/sbin/ipa-getkeytab \
          -p capsule/{{ ansible_fqdn }}@{{ ansible_domain|upper }} \
          -s {{ idm_vars.idm_server }} \
          -k /etc/foreman-proxy/dns.keytab
  args: 
    chdir: /etc/foreman-proxy/
  when: idm_dns_setup and dns_proxy
  tags:
    - idmdns

- shell: chown foreman-proxy:foreman-proxy /etc/foreman-proxy/dns.keytab
  args:
    chdir: /etc/foreman-proxy/
  when: idm_dns_setup and dns_proxy
  tags:
    - idmdns

- shell: kinit -kt /etc/foreman-proxy/dns.keytab capsule/{{ ansible_fqdn }}@{{ ansible_domain|upper }}
  args:
    chdir: /etc/foreman-proxy/
  when: idm_dns_setup and dns_proxy
  tags:
    - idmdns

- name: Verify if HTTP Service in IdM for Satellite exists
  shell: echo "{{ idm_vars.idm_password }}" | kinit admin;
         /usr/bin/ipa service-find HTTP/{{ ansible_fqdn }}
  register: result
  failed_when:
    - ( result.rc != 1 and result.rc != 0 )
  changed_when: False
  tags:
    - idmdns

- name: Add HTTP Service to in Idm for Satellite
  shell: echo "{{ idm_vars.idm_password }}" | kinit admin;
         /usr/bin/ipa service-add HTTP/{{ ansible_fqdn }}
  when: result.rc != 0
  tags:
    - idmdns

- name: Verify 'satellite-admin' group to idm
  command: /usr/bin/ipa group-find satellite-admin
  register: result
  changed_when: False
  failed_when:
    - ( result.rc != 1 and result.rc != 0 )
  tags:
    - idmdns

- name: Create 'satellite-admin' group in IdM
  shell: /usr/bin/ipa group-add satellite-admin
  when: result is failed
  tags:
    - idmdns

- name: Verify hbac service in IdM
  shell: /usr/bin/ipa hbacsvc-find satellite-prod
  register: result
  changed_when: False
  failed_when:
    - ( result.rc != 1 and result.rc != 0 )
  tags:
    - idmdns

- name: Create hbac service in IdM
  shell: /usr/bin/ipa hbacsvc-add satellite-prod
  when: result.rc != 0
  tags:
    - idmdns

- name: Verify hbac rule in IdM
  shell: /usr/bin/ipa hbacrule-find allow_satellite_prod
  register: result
  changed_when: False
  failed_when:
    - ( result.rc != 1 and result.rc != 0 )
  tags:
    - idmdns

- shell: |
         /usr/bin/ipa hbacrule-add allow_satellite_prod;
         /usr/bin/ipa hbacrule-add-service allow_satellite_prod --hbacsvcs=satellite-prod;
         /usr/bin/ipa hbacrule-add-user allow_satellite_prod --groups=satellite-admin;
         /usr/bin/ipa hbacrule-add-host allow_satellite_prod --hosts={{ ansible_fqdn }};
  when: result.rc != 0
  tags:
    - idmdns


#
# add to forward and reverse zones "BIND update policy" in IdM
# grant capsule\satellite-server-1.us.lmco.com@ORL.LMCO.COM wildcard * ANY;
# on forward zone, enable 'Allow PTR Sync'
# on both zones, enable dynamic updates
#

- name: Run foreman installer to configure capsule
  shell: satellite-installer --scenario satellite \
         --foreman-proxy-dns true \
         --foreman-proxy-dns-managed true \
         --foreman-proxy-dns-interface "{{ dns_vars.dns_interface }}" \  
         --foreman-proxy-dns-provider nsupdate_gss \
         --foreman-proxy-dns-server "{{ idm_vars.idm_server }}" \
         --foreman-proxy-dns-tsig-principal "capsule/{{ ansible_fqdn }}@{{ ansible_domain|upper }}" \
         --foreman-proxy-dns-tsig-keytab /etc/foreman-proxy/dns.keytab \
         --foreman-proxy-dns-reverse "{{ dns_vars.dns_reverse }}" \
         --foreman-proxy-dns-zone "{{ dns_vars.dns_zone }}" \
         --foreman-proxy-dns-ttl 86400
  when: idm_dns_setup and dns_proxy
  tags:
    - idmdns

- name: Restart foreman proxy service
  service:
    name: foreman-proxy
    state: restarted
  when: idm_dns_setup and dns_proxy
  tags:
    - idmdns
